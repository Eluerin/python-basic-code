1
# 编译型语言 vs. 解释型语言
# 编译型：C，go
#      一次性把源代码进行翻译
#       特点：执行效率很高，平台依赖性一般比较高
# 解释型：javascript,python,ruby
#       逐行对源代码进行翻译和运行
#       特点：执行效率相对较低，平台依赖性不高，（源代码一般无法加密）
# 编译型语言 vs. 解释型语言
# 编译型：C，go
#      一次性把源代码进行翻译
#       特点：执行效率很高，平台依赖性一般比较高
# 解释型：javascript,python,ruby
#       逐行对源代码进行翻译和运行
#       特点：执行效率相对较低，平台依赖性不高，（源代码一般无法加密）

# python解释器与pycharm
# python解释器与pycharm


2、python优缺点
爬虫
自动化
科学计算
人工智能

3、注释的作用：
帮助解释代码逻辑
查找报错

4、单行注释与多行注释
#单行注释
'''
多行注释
'''

5、变量：
可以发生改变
变量用来区分不同数据
可以指向一个内存空间
帮助存储数据

5.1、变量命名规范
    必须是数字、字母或下划线（a，a1,a_1）
    不能是数字开头，不能是纯数字（为了防止与数字计算相冲突）
    不能用python关键字（if,else这种）
    不要用中文
    不要太长
    要有意义
    推荐使用下划线或者驼峰命名

6、常量
    print(123)
    所有字母变成大写，可视为常量

7、数据类型：
区分不同的数据，不同的数据类型应该有不同的操作
    数字（整数int、小数float）
    文字：字符串：str(''引号引用起来)
        +：左右必须都是字符串。将字符串连起来
        *：一个字符串只能乘以一个数字。表示字符串重复的次数
    bool:条件判断(只能首字母大写)
        True：真命题
        False：假命题
        100 >= 30 >>True
        100 >= 500 >>False
        a = True

8、简单用户交互
变量 = input（提示语）
首先会在屏幕中显示提示语，用户输入内容，然后把用户输入的内容交给前面的变量
缺点：input()只会得到的结果一定是字符串
#用type(a+b)来返回变量的数据类型

8.1字符串转换数字类型
    str => int、float、bool...
    直接用数据类型函数

9、条件判断
if语句的语法规则：
9.1、
    if 条件：
        代码
    条件成立，执行代码
9.2、
    if 条件：
        代码1
    else :
        代码2
    条件成立，执行代码1，否则执行代码2
9.3、if语句可以互相嵌套
    if 条件1：
        if 条件2:
            ......
        else：
            ......
    else:
        ......
9.4、非嵌套多层次的条件判断(else if - elif)
    if 条件1:
        代码1
    elif:
        代码2
    elif:
        代码3
    ......
    else:
        代码n

10、循环语句：可以让代码重复执行
10.1、while循环
    while 条件：
        代码
    过程：判断条件是否为真，如果真，执行代码
    然后再次判断，直到条件为假

    ####while语句可以和if语句搭配使用
10.2、
注：break和continue基本都用于while和if的嵌套结构中
    # break：让循环立即停止
        适用于循环计算中，其中一次循环中的结果能够直接影响最终结果，导致后面的循环不再需要
    # continue：停止当前本次循环，继续执行下次循环
        适用于检索等过程中，剔除某些无效的数据


11、for循环
注：字符串可以迭代
    for 变量 in 可迭代的范围
        代码
    把可迭代的范围中，每一项内容拿出来，挨个赋值给变量，每一次赋值都要执行一次循环体（代码）
注：for循环想要计数，必须借助于range

range(n)：从0数到n,不包含n
range(m,n)：从m数到n，不包含n
range(m,n,q)：从m数到n，不包含n，每次间隔为q

*平时用的多的是for循环，while循环用的多的是死循环

pass：代码占位(关键字)
    用于一段代码中，暂时没有想好要写什么，又不想让系统报错（服务于代码完整性）
    见py1.py line154
